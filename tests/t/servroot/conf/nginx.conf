worker_processes  1;
daemon on;
master_process off;
error_log /srv/t/servroot/logs/error.log debug;
pid       /srv/t/servroot/logs/nginx.pid;
env MOCKEAGAIN_VERBOSE;
env MOCKEAGAIN;
env MOCKEAGAIN_WRITE_TIMEOUT_PATTERN;
env LD_PRELOAD;
env LD_LIBRARY_PATH;
env DYLD_INSERT_LIBRARIES;
env DYLD_FORCE_FLAT_NAMESPACE;
#env LUA_PATH;
#env LUA_CPATH;



http {
    access_log /srv/t/servroot/logs/access.log;
    #access_log off;

    default_type text/plain;
    keepalive_timeout  68;


    lua_package_path "/srv/lib/?.lua;;";
    lua_package_cpath "/usr/local/openresty-debug/lualib/?.so;/usr/local/openresty/lualib/?.so;;";


    server {
        listen          1984;
        server_name     'localhost';

        client_max_body_size 30M;
        #client_body_buffer_size 4k;

        # Begin preamble config...

        # End preamble config...

        # Begin test case config...
    location /t {
        resolver 127.0.0.11;
        content_by_lua '
            local sendbuffer = require "resty.kafka.sendbuffer"
            local buffer = sendbuffer:new(2, 20)

            local topic = "test"
            local partition_id = 1
            local key = "key"
            local message = "halo world"

            local overflow = buffer:add(topic, partition_id, key, message)
            ngx.say("overflow:", overflow)

            ngx.say("used:", buffer.topics[topic][partition_id].used)

            ngx.say("queue_num:", buffer.queue_num)

            buffer:clear(topic, partition_id)

            ngx.say("done:", buffer:done())

            ngx.say("queue_num:", buffer.queue_num)

            for i = 1, 10000 do
                buffer:clear(topic, partition_id)
            end

            ngx.say("used:", buffer.topics[topic][partition_id].used)
        ';
    }

        # End test case config.

        location / {
            root /srv/t/servroot/html;
            index index.html index.htm;
        }
    }
}



#timer_resolution 100ms;

events {
    accept_mutex off;

    worker_connections  64;
}
env ASAN_OPTIONS;
env MOCKNOEAGAIN_VERBOSE;
env MOCKNOEAGAIN;
user root;
